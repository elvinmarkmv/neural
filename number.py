import numpy as np 
import neural as nn

s0 = [1,1,1,1,0,1,1,0,1,1,0,1,1,1,1]
s1 = [0,1,0,0,1,0,0,1,0,0,1,0,0,1,0]
s2 = [1,1,1,0,0,1,1,1,1,1,0,0,1,1,1]
s3 = [1,1,1,0,0,1,1,1,1,0,0,1,1,1,1]
s4 = [1,0,1,1,0,1,1,1,1,0,0,1,0,0,1]
s5 = [1,1,1,1,0,0,1,1,1,0,0,1,1,1,1]
s6 = [1,1,1,1,0,0,1,1,1,1,0,1,1,1,1]
s7 = [1,1,1,0,0,1,0,0,1,0,0,1,0,0,1]
s8 = [1,1,1,1,0,1,1,1,1,1,0,1,1,1,1]
s9 = [1,1,1,1,0,1,1,1,1,0,0,1,0,0,1]

in_set = np.array([s0,s1,s2,s3,s4,s5,s6,s7,s8,s9])
out_set = np.array([[0],[1],[2],[3],[4],[5],[6],[7],[8],[9]])/9.

s = [15,10,1]
n = nn.neural(s)
n.train(in_set,out_set,2000)
n.save_weights("number1.dat","number2.dat")
n.forward(in_set)
print np.round(9.*n.o)